// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using simple_movie_api_dotnet.Model;

namespace simple_movie_api_dotnet.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20210504163145_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("simple_movie_api_dotnet.Entities.ActorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("actors");
                });

            modelBuilder.Entity("simple_movie_api_dotnet.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieGenreId")
                        .HasColumnType("int")
                        .HasColumnName("movie_genre_id");

                    b.Property<DateTime>("PremierOn")
                        .HasColumnType("datetime")
                        .HasColumnName("premier_on");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieGenreId");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("simple_movie_api_dotnet.Entities.MovieGenreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("movie_genres");
                });

            modelBuilder.Entity("simple_movie_api_dotnet.Entities.MovieEntity", b =>
                {
                    b.HasOne("simple_movie_api_dotnet.Entities.MovieGenreEntity", "MovieGenre")
                        .WithMany("Movies")
                        .HasForeignKey("MovieGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieGenre");
                });

            modelBuilder.Entity("simple_movie_api_dotnet.Entities.MovieGenreEntity", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
